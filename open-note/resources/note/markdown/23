# 开源笔记-许可

**版本：1.1**

**发布于2020年11月**

**使用、复制和分发的子条款：**

*注释：你可以为作品添加子条款。详见父条款第四条。*

**使用、复制和分发的父条款：**

1. 根据本许可的条款和条件，每位贡献者在此授予您永久、全世界、非排他性、免费、免版税、不可撤销的版权许可，用以复制、衍生、公开展示、公开表演、转授许可证，并以源形式或目标形式分发作品和此类衍生作品。
2. 使用、复制和分发开源笔记许可发行的作品时，必须携带开源笔记许可。允许为链接方式携带。
3. 一旦您在商业性质作品中使用了开源笔记许可发行的作品，您必须表示感谢，尤其是对该作品主要贡献者的感谢。当开源笔记许可发行的作品为你产生良好效益时，鼓励您为用到的作品贡献者们、开源笔记组织捐赠，但这绝非强制性的。
4. 您可以为作品添加子许可条款，且子条款必须写在父条款前。注意您不可修改父条款，否则本许可自动作废，您将不能使用任何由开源笔记许可发行的作品。子条款不可与父条款冲突。
5. 您可在非约束条文中添加作品贡献者、备注、使用说明书、引用资料等文本，但不可出现以开源笔记许可为名义的约束性条款，它们不属于开源笔记许可，开源笔记许可不对这些内容负责，对于属于开源笔记的约束条款应当写在子条款区。
6. 当您使用了其它许发行的作品，请确保其对其它许可，尤其是对本许可友好，不与本许可条款冲突。加入的许可不应当是污染性的，例如GPL。不满足上述条件时您不应当加入其它许可，或不对使用到这类许可的作品附上开源笔记许可。

**非约束条文：**

*注释：你可以为作品添加非约束条文。详见父条款第五条。*

1. 本笔记由两份雪糕创建首版，版号1.0.0。
2. 部分引用于其它位置的资料若没有在正文给出连接，则是在本文最后的“参考文献”中贴出。

# HTML

## 属性

### disabled

disabled 属性规定应该禁用 input 元素，被禁用的 input 元素，不可编辑，不可复制，不可选择，不能接收焦点,后台也不会接收到传值。设置后文字的颜色会变成灰色。disabled 属性无法与 `<input type="hidden">`一起使用。
 示例：`<input type="text" disabled="disabled" />`。

### readonly

readonly 属性规定输入字段为只读可复制，但是，用户可以使用Tab键切换到该字段，可选择,可以接收焦点，还可以选中或拷贝其文本。后台会接收到传值. readonly 属性可以防止用户对值进行修改。

readonly 属性可与` <input type="text">` 或 `<input type="password"> `配合使用。
 示例：`<input type="text" readonly="readonly">`。

readonly unselectable=''on'：

- 该属性跟disable类似，input 元素，不可编辑，不可复制，不可选择，不能接收焦点，设置后文字的颜色也会变成灰色，但是后台可以接收到传值。示例：`<input type="text"  readonly  unselectable="on" >`。

### autofocus

为文本框、选择框或按钮控件加上autofocus属性后，当加载页面时，该控件自动获得光标焦点。

### required

HTML5中新增的required属性可以应用在大多数输入标签中，在提交时，若标签的值为空，则不允许提交。

### novalidate

定义和用法：

- novalidate 属性规定当提交表单时不对其进行验证。
- novalidate 属性适用于：\<form>，以及以下类型的\<input> 标签：text, search, url, telephone, email, password, date pickers, range 以及 color。

使用场景：

- HTML的新功能就是form元素拥有原生校验能力，但显得不是那么自由、强大、实用。如果你希望HTML5表单禁止执行原生的校验，你只需要在form元素上添加novalidate属性，这样就可以防止它同你的自己写的JavaScript的校验方法起冲突。

代码示例：

```html
<form action="demo-form.php" novalidate>
    邮箱: <input type="email" name="user_email">
    <input type="submit">
</form>
```

注意：

- 在 XHTML 中，禁止属性最小化，novalidate 属性必须定义为`<form novalidate="novalidate">`。

### aria-hidden

图标的可访问性。

现代的辅助技术能够识别并朗读由 CSS 生成的内容和特定的 Unicode 字符。为了避免屏幕识读设备抓取非故意的和可能产生混淆的输出内容（尤其是当图标纯粹作为装饰用途时），我们为这些图标设置了 aria-hidden="true" 属性。

如果你使用图标是为了表达某些含义（不仅仅是为了装饰用），请确保你所要表达的意思能够通过被辅助设备识别，例如，包含额外的内容并通过 .sr-only 类让其在视觉上表现出隐藏的效果。

如果你所创建的组件不包含任何文本内容（例如， `<button> `内只包含了一个图标），你应当提供其他的内容来表示这个控件的意图，这样就能让使用辅助设备的用户知道其作用了。这种情况下，你可以为控件添加 aria-label 属相。

### role

参考文章：https://blog.csdn.net/annip/article/details/53455226 。

role属性作用是告诉Accessibility类应用（比如屏幕朗读程序，为盲人提供的访问网络的便利程序），这个元素所扮演的角色，主要是供残疾人使用。使用role可以增强文本的可读性和语义化。

在html5元素内，标签本身就是有语义的，因此role是不必添加的，至少是不推荐的，但是bootstrap的案例内很多都是有类似的属性和声明的，目的是为了兼容老版本的浏览器（用户代理），如果你的代码使用了html5标签，并且不准备支持老版本的浏览器，不妨不使用role标签。

# 参考文献

1. https://blog.csdn.net/qq_16605855/article/details/78581246 。