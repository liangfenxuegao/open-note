# CSS基础

# CSS样式

## 背景样式

## 字体

CSS文本：

- CSS文本属性可定义文本外观。通过文本属性，可以改变文本的颜色、字符间距、对齐文本、装饰文本、对文本缩进。
- 文本属性一览：
  - color：文本颜色。
  - direction：文本方向。
  - line-height：行高。
  - letter-spacing：字符间距。
  - text-align：对齐元素中的文本。
  - text-decoration：向文本添加修饰。
  - text-indent：缩进元素中文本的首行。
  - text-transform：元素中的字母。
  - unicode-bidi：设置文本方向。
  - white-space：元素中空白的处理方式。
  - word-spacing：字间距。

CSS3的文本效果：

- text-shadow：向文本添加阴影。
- word-wrap：规定文本的换行规则。

示例：

- 代码：

  - html部分：

    ```html
    <!DOCTYPE html>
    <html lang="zh">
    <head>
        <meta charset="UTF-8">
        <title>文本样式</title>
        <link href="style.css" type="text/css" rel="stylesheet">
    </head>
    <body bgcolor="#f5f5dc">
        <h2>也不是没有道理</h2>
        <p class="article">请对方辩友注意辩题，即使人工智能尚未发展到能帮助人类完成一切工作，那也在使你更加轻松。就像现在的我们，不再为生存而与大自然作斗争，这就是科技进步的力量。但每一次人类的文明上一个层次都并不会让人类永远堕落，人的欲望是无穷的，人总会去追求更高层次的事物。可以想象当人工智能发展到能帮助人类完成一切工作时，人类的未来就再也不会被占用每个人时间的工作所束缚了。</p>
        <div>
            <p id="capitalizeTest">This is transformTest page</p>
            <p id="lowercaseTest">This is transformTest page</p>
            <p id="uppercaseTest">This is transformTest page</p>
            <h1 id="shadowTest">阴影效果测试</h1>
            <p id="word-wrapTest">Anyone who has ever used the Internet has seen Google, and many people would just “google it” where they try to find information about something on the Internet. As the world’s most popular Internet search engine, Google is one if the greatest examples of online success.</p>
        </div>
    </body>
    </html>
    ```

  - style.css：

    ```css
    body{
        color: #5f7281;
        text-align: center;/*指定对齐方式为center*/
    }
    .article{
        color: black;
        text-align: left;
        text-indent: 2em;/*缩进两行，1em等于16px，其值可以为负*/
    }
    body div{
        color: #3d8b38;
    }
    #capitalizeTest{
        text-transform: capitalize;/*将首字母变为大写*/
    }
    #lowercaseTest{
        text-transform: lowercase;/*首字母变为小写*/
    }
    #uppercaseTest{
        text-transform: uppercase;/*所有字母变为大写*/
    }
    #shadowTest{
        text-shadow:5px 5px 3px #b4b4b4;
    }
    #word-wrapTest{
        text-align: center;
        word-wrap: normal;/*normal为正常换行方式,并且单词会智能排版*/
    }
    ```

- 效果：

  ![image-20201112210021166](CSS.assets/image-20201112210021166.png)



CSS字体：

- CSS字体属性定义文本的字体系列、大小、加粗、风格和变形。

- 字体属性一览：

  | 属性         | 描述                             |
  | ------------ | -------------------------------- |
  | font-family  | 设置字体系列                     |
  | font-size    | 设置字体的尺寸                   |
  | font-style   | 设置字体风格                     |
  | font-variant | 以小型大写字体或正常字体显示文本 |
  | font-weight  | 设置字体的粗细                   |

- 示例：

  - html代码：

    ```html
    <p id="typefaceTest">字体样式测试</p>
    <p id="myFontTest">使用自定义的字体</p>
    ```

  - css代码：

    ```css
    #typefaceTest{
        font-size: 80px;/*字体大小*/
        font-family: 楷体;/*字体类型*/
    }
    /*自定义字体的调用方法*/
    @font-face {
        font-family: myFont;
        src: url("沐瑶软笔手写体.ttf");
    }
    #myFontTest{
        font-size: 80px;/*字体大小*/
        font-family: myFont;
    }
    ```

  - 效果：

    ![image-20201112212518701](CSS.assets/image-20201112212518701.png)

# CSS属性

## 样式

### display

可能的值：

| 值                 | 描述                                                         |
| ------------------ | ------------------------------------------------------------ |
| none               | 此元素不会被显示。                                           |
| block              | 此元素将显示为块级元素，此元素前后会带有换行符。             |
| inline             | 默认。此元素会被显示为内联元素，元素前后没有换行符。         |
| inline-block       | 行内块元素。（CSS2.1 新增的值）                              |
| list-item          | 此元素会作为列表显示。                                       |
| run-in             | 此元素会根据上下文作为块级元素或内联元素显示。               |
| compact            | CSS 中有值 compact，不过由于缺乏广泛支持，已经从 CSS2.1 中删除。 |
| marker             | CSS 中有值 marker，不过由于缺乏广泛支持，已经从 CSS2.1 中删除。 |
| table              | 此元素会作为块级表格来显示（类似 <table>），表格前后带有换行符。 |
| inline-table       | 此元素会作为内联表格来显示（类似 <table>），表格前后没有换行符。 |
| table-row-group    | 此元素会作为一个或多个行的分组来显示（类似 <tbody>）。       |
| table-header-group | 此元素会作为一个或多个行的分组来显示（类似 <thead>）。       |
| table-footer-group | 此元素会作为一个或多个行的分组来显示（类似 <tfoot>）。       |
| table-row          | 此元素会作为一个表格行显示（类似 <tr>）。                    |
| table-column-group | 此元素会作为一个或多个列的分组来显示（类似 <colgroup>）。    |
| table-column       | 此元素会作为一个单元格列显示（类似 <col>）                   |
| table-cell         | 此元素会作为一个表格单元格显示（类似 <td> 和 <th>）          |
| table-caption      | 此元素会作为一个表格标题显示（类似 <caption>）               |
| inherit            | 规定应该从父元素继承 display 属性的值。                      |

### opactiy

透明度，从0.0到1。

## @系列

### @media

**定义和使用：**

使用 @media 查询，你可以针对不同的媒体类型定义不同的样式。

@media 可以针对不同的屏幕尺寸设置不同的样式，特别是如果你需要设置设计响应式的页面，@media 是非常有用的。

当你重置浏览器大小的过程中，页面也会根据浏览器的宽度和高度重新渲染页面。

**CSS语法：**

```css
@media mediatype and|not|only (media feature) {
    CSS-Code;
}
```

可以针对不同的媒体使用不同 *stylesheets* :

```html
<link rel="stylesheet" media="mediatype and|not|only (media feature)" href="mystylesheet.css">
```

**媒体类型：**

| 值         | 描述                                                         |
| :--------- | :----------------------------------------------------------- |
| all        | 用于所有设备                                                 |
| aural      | 已废弃。用于语音和声音合成器                                 |
| braille    | 已废弃。 应用于盲文触摸式反馈设备                            |
| embossed   | 已废弃。 用于打印的盲人印刷设备                              |
| handheld   | 已废弃。 用于掌上设备或更小的装置，如PDA和小型电话           |
| print      | 用于打印机和打印预览                                         |
| projection | 已废弃。 用于投影设备                                        |
| screen     | 用于电脑屏幕，平板电脑，智能手机等。                         |
| speech     | 应用于屏幕阅读器等发声设备                                   |
| tty        | 已废弃。 用于固定的字符网格，如电报、终端设备和对字符有限制的便携设备 |
| tv         | 已废弃。 用于电视和网络电视                                  |

**媒体功能：**

| 值                      | 描述                                                         |
| :---------------------- | :----------------------------------------------------------- |
| aspect-ratio            | 定义输出设备中的页面可见区域宽度与高度的比率                 |
| color                   | 定义输出设备每一组彩色原件的个数。如果不是彩色设备，则值等于0 |
| color-index             | 定义在输出设备的彩色查询表中的条目数。如果没有使用彩色查询表，则值等于0 |
| device-aspect-ratio     | 定义输出设备的屏幕可见宽度与高度的比率。                     |
| device-height           | 定义输出设备的屏幕可见高度。                                 |
| device-width            | 定义输出设备的屏幕可见宽度。                                 |
| grid                    | 用来查询输出设备是否使用栅格或点阵。                         |
| height                  | 定义输出设备中的页面可见区域高度。                           |
| max-aspect-ratio        | 定义输出设备的屏幕可见宽度与高度的最大比率。                 |
| max-color               | 定义输出设备每一组彩色原件的最大个数。                       |
| max-color-index         | 定义在输出设备的彩色查询表中的最大条目数。                   |
| max-device-aspect-ratio | 定义输出设备的屏幕可见宽度与高度的最大比率。                 |
| max-device-height       | 定义输出设备的屏幕可见的最大高度。                           |
| max-device-width        | 定义输出设备的屏幕最大可见宽度。                             |
| max-height              | 定义输出设备中的页面最大可见区域高度。                       |
| max-monochrome          | 定义在一个单色框架缓冲区中每像素包含的最大单色原件个数。     |
| max-resolution          | 定义设备的最大分辨率。                                       |
| max-width               | 定义输出设备中的页面最大可见区域宽度。                       |
| min-aspect-ratio        | 定义输出设备中的页面可见区域宽度与高度的最小比率。           |
| min-color               | 定义输出设备每一组彩色原件的最小个数。                       |
| min-color-index         | 定义在输出设备的彩色查询表中的最小条目数。                   |
| min-device-aspect-ratio | 定义输出设备的屏幕可见宽度与高度的最小比率。                 |
| min-device-width        | 定义输出设备的屏幕最小可见宽度。                             |
| min-device-height       | 定义输出设备的屏幕的最小可见高度。                           |
| min-height              | 定义输出设备中的页面最小可见区域高度。                       |
| min-monochrome          | 定义在一个单色框架缓冲区中每像素包含的最小单色原件个数       |
| min-resolution          | 定义设备的最小分辨率。                                       |
| min-width               | 定义输出设备中的页面最小可见区域宽度。                       |
| monochrome              | 定义在一个单色框架缓冲区中每像素包含的单色原件个数。如果不是单色设备，则值等于0 |
| orientation             | 定义输出设备中的页面可见区域高度是否大于或等于宽度。         |
| resolution              | 定义设备的分辨率。如：96dpi, 300dpi, 118dpcm                 |
| scan                    | 定义电视类设备的扫描工序。                                   |
| width                   | 定义输出设备中的页面可见区域宽度。                           |

参考文章：https://www.runoob.com/cssref/css3-pr-mediaquery.html 



