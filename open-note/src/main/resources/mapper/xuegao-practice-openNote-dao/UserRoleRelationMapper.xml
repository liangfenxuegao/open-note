<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="xuegao.practice.openNote.dao.UserRoleRelationMapper"><!-- 当使用接口获取映射方法时，命名空间不能随便取，要指定为接口的全类名 -->

    <!--通过userId查询roleId，会得到roleIdSet。integer是MyBatis内置的Integer类型别名。注意如果接口定义了返回类型是集合，那应该设置为集合包含的类型，而不是集合本身。-->
    <select id="getRoleIdSetByUserId" resultType="integer">
        SELECT role_id FROM open_note.user_role_relation WHERE user_id = #{userId}
    </select>

    <!--通过userId查询role，会得到roleSet-->
    <resultMap id="getRoleSetByUserIdMap" type="xuegao.practice.openNote.entity.Role">
        <id column="role_id" property="id"/>
        <result column="role_name" property="roleName"/>
        <result column="meaning" property="meaning"/>
        <result column="available" property="available"/>
    </resultMap>
    <select id="getRoleSetByUserId" resultMap="getRoleSetByUserIdMap">
        SELECT user_role_relation.user_id, user_role_relation.role_id, role.id, role.role_name, role.meaning, role.available
        FROM open_note.role, open_note.user_role_relation
        WHERE role.id = user_role_relation.role_id and user_role_relation.user_id = #{userId}
    </select>

    <!--根据userDto的userId和Set<Role>属性，插入若干条userId与roleId的对应关系。-->
    <insert id="addUserRoleRelationByUserDto">
        INSERT INTO user_role_relation(user_id, role_id) VALUES
        <foreach collection="roleSet" item="role" separator=",">
            (#{userId},#{role.id})
        </foreach>
    </insert>
</mapper>
